#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UGTUKadrService.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Kadr")]
	public partial class DBKadrDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertFactStaffReplacement(FactStaffReplacement instance);
    partial void UpdateFactStaffReplacement(FactStaffReplacement instance);
    partial void DeleteFactStaffReplacement(FactStaffReplacement instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertPlanStaff(PlanStaff instance);
    partial void UpdatePlanStaff(PlanStaff instance);
    partial void DeletePlanStaff(PlanStaff instance);
    partial void InsertFactStaff(FactStaff instance);
    partial void UpdateFactStaff(FactStaff instance);
    partial void DeleteFactStaff(FactStaff instance);
    #endregion
		
		public DBKadrDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["KadrConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBKadrDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBKadrDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBKadrDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBKadrDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<FactStaffReplacement> FactStaffReplacements
		{
			get
			{
				return this.GetTable<FactStaffReplacement>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<PlanStaff> PlanStaffs
		{
			get
			{
				return this.GetTable<PlanStaff>();
			}
		}
		
		public System.Data.Linq.Table<FactStaff> FactStaffs
		{
			get
			{
				return this.GetTable<FactStaff>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPlanStaffByPeriod", IsComposable=true)]
		public IQueryable<GetPlanStaffByPeriodResult> GetPlanStaffByPeriod([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodBegin", DbType="DateTime")] System.Nullable<System.DateTime> periodBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodEnd", DbType="DateTime")] System.Nullable<System.DateTime> periodEnd)
		{
			return this.CreateMethodCallQuery<GetPlanStaffByPeriodResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodBegin, periodEnd);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSubDepartments", IsComposable=true)]
		public IQueryable<GetSubDepartmentsResult> GetSubDepartments([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idManagerDepartment)
		{
			return this.CreateMethodCallQuery<GetSubDepartmentsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idManagerDepartment);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetFactStaffByPeriod", IsComposable=true)]
		public IQueryable<GetFactStaffByPeriodResult> GetFactStaffByPeriod([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodBegin", DbType="DateTime")] System.Nullable<System.DateTime> periodBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodEnd", DbType="DateTime")] System.Nullable<System.DateTime> periodEnd)
		{
			return this.CreateMethodCallQuery<GetFactStaffByPeriodResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodBegin, periodEnd);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDepartmentStaff", IsComposable=true)]
		public IQueryable<GetDepartmentStaffResult> GetDepartmentStaff([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodBegin", DbType="DateTime")] System.Nullable<System.DateTime> periodBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodEnd", DbType="DateTime")] System.Nullable<System.DateTime> periodEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WithSubDeps", DbType="Bit")] System.Nullable<bool> withSubDeps)
		{
			return this.CreateMethodCallQuery<GetDepartmentStaffResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDepartment, periodBegin, periodEnd, withSubDeps);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DepartmentName;
		
		private string _DepartmentSmallName;
		
		private System.Nullable<int> _idDepartmentType;
		
		private System.Nullable<int> _idManagerDepartment;
		
		private System.Nullable<int> _KadrID;
		
		private System.Nullable<System.DateTime> _dateCreate;
		
		private System.Nullable<System.DateTime> _dateExit;
		
		private System.Nullable<int> _idManagerPlanStaff;
		
		private System.Nullable<int> _idBeginPrikaz;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<int> _SeverKoeff;
		
		private System.Nullable<int> _RayonKoeff;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<PlanStaff> _PlanStaffs;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnDepartmentSmallNameChanging(string value);
    partial void OnDepartmentSmallNameChanged();
    partial void OnidDepartmentTypeChanging(System.Nullable<int> value);
    partial void OnidDepartmentTypeChanged();
    partial void OnidManagerDepartmentChanging(System.Nullable<int> value);
    partial void OnidManagerDepartmentChanged();
    partial void OnKadrIDChanging(System.Nullable<int> value);
    partial void OnKadrIDChanged();
    partial void OndateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OndateCreateChanged();
    partial void OndateExitChanging(System.Nullable<System.DateTime> value);
    partial void OndateExitChanged();
    partial void OnidManagerPlanStaffChanging(System.Nullable<int> value);
    partial void OnidManagerPlanStaffChanged();
    partial void OnidBeginPrikazChanging(System.Nullable<int> value);
    partial void OnidBeginPrikazChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnSeverKoeffChanging(System.Nullable<int> value);
    partial void OnSeverKoeffChanged();
    partial void OnRayonKoeffChanging(System.Nullable<int> value);
    partial void OnRayonKoeffChanged();
    #endregion
		
		public Department()
		{
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._PlanStaffs = new EntitySet<PlanStaff>(new Action<PlanStaff>(this.attach_PlanStaffs), new Action<PlanStaff>(this.detach_PlanStaffs));
			this._Department1 = default(EntityRef<Department>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentSmallName", DbType="VarChar(50)")]
		public string DepartmentSmallName
		{
			get
			{
				return this._DepartmentSmallName;
			}
			set
			{
				if ((this._DepartmentSmallName != value))
				{
					this.OnDepartmentSmallNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentSmallName = value;
					this.SendPropertyChanged("DepartmentSmallName");
					this.OnDepartmentSmallNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartmentType", DbType="Int")]
		public System.Nullable<int> idDepartmentType
		{
			get
			{
				return this._idDepartmentType;
			}
			set
			{
				if ((this._idDepartmentType != value))
				{
					this.OnidDepartmentTypeChanging(value);
					this.SendPropertyChanging();
					this._idDepartmentType = value;
					this.SendPropertyChanged("idDepartmentType");
					this.OnidDepartmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerDepartment", DbType="Int")]
		public System.Nullable<int> idManagerDepartment
		{
			get
			{
				return this._idManagerDepartment;
			}
			set
			{
				if ((this._idManagerDepartment != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidManagerDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idManagerDepartment = value;
					this.SendPropertyChanged("idManagerDepartment");
					this.OnidManagerDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KadrID", DbType="Int")]
		public System.Nullable<int> KadrID
		{
			get
			{
				return this._KadrID;
			}
			set
			{
				if ((this._KadrID != value))
				{
					this.OnKadrIDChanging(value);
					this.SendPropertyChanging();
					this._KadrID = value;
					this.SendPropertyChanged("KadrID");
					this.OnKadrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateCreate
		{
			get
			{
				return this._dateCreate;
			}
			set
			{
				if ((this._dateCreate != value))
				{
					this.OndateCreateChanging(value);
					this.SendPropertyChanging();
					this._dateCreate = value;
					this.SendPropertyChanged("dateCreate");
					this.OndateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateExit
		{
			get
			{
				return this._dateExit;
			}
			set
			{
				if ((this._dateExit != value))
				{
					this.OndateExitChanging(value);
					this.SendPropertyChanging();
					this._dateExit = value;
					this.SendPropertyChanged("dateExit");
					this.OndateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerPlanStaff", DbType="Int")]
		public System.Nullable<int> idManagerPlanStaff
		{
			get
			{
				return this._idManagerPlanStaff;
			}
			set
			{
				if ((this._idManagerPlanStaff != value))
				{
					if (this._PlanStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidManagerPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idManagerPlanStaff = value;
					this.SendPropertyChanged("idManagerPlanStaff");
					this.OnidManagerPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBeginPrikaz", DbType="Int")]
		public System.Nullable<int> idBeginPrikaz
		{
			get
			{
				return this._idBeginPrikaz;
			}
			set
			{
				if ((this._idBeginPrikaz != value))
				{
					this.OnidBeginPrikazChanging(value);
					this.SendPropertyChanging();
					this._idBeginPrikaz = value;
					this.SendPropertyChanged("idBeginPrikaz");
					this.OnidBeginPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverKoeff", DbType="Int")]
		public System.Nullable<int> SeverKoeff
		{
			get
			{
				return this._SeverKoeff;
			}
			set
			{
				if ((this._SeverKoeff != value))
				{
					this.OnSeverKoeffChanging(value);
					this.SendPropertyChanging();
					this._SeverKoeff = value;
					this.SendPropertyChanged("SeverKoeff");
					this.OnSeverKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RayonKoeff", DbType="Int")]
		public System.Nullable<int> RayonKoeff
		{
			get
			{
				return this._RayonKoeff;
			}
			set
			{
				if ((this._RayonKoeff != value))
				{
					this.OnRayonKoeffChanging(value);
					this.SendPropertyChanging();
					this._RayonKoeff = value;
					this.SendPropertyChanged("RayonKoeff");
					this.OnRayonKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Departments", ThisKey="id", OtherKey="idManagerDepartment")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PlanStaff", Storage="_PlanStaffs", ThisKey="id", OtherKey="idDepartment")]
		public EntitySet<PlanStaff> PlanStaffs
		{
			get
			{
				return this._PlanStaffs;
			}
			set
			{
				this._PlanStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department1", ThisKey="idManagerDepartment", OtherKey="id", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._idManagerDepartment = value.id;
					}
					else
					{
						this._idManagerDepartment = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_Department", Storage="_PlanStaff", ThisKey="idManagerPlanStaff", OtherKey="id", IsForeignKey=true)]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._idManagerPlanStaff = value.id;
					}
					else
					{
						this._idManagerPlanStaff = default(Nullable<int>);
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PostName;
		
		private string _PostShortName;
		
		private bool _ManagerBit;
		
		private int _idGlobalPrikaz;
		
		private int _idPKCategory;
		
		private System.Nullable<int> _idCategory;
		
		private EntitySet<PlanStaff> _PlanStaffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPostNameChanging(string value);
    partial void OnPostNameChanged();
    partial void OnPostShortNameChanging(string value);
    partial void OnPostShortNameChanged();
    partial void OnManagerBitChanging(bool value);
    partial void OnManagerBitChanged();
    partial void OnidGlobalPrikazChanging(int value);
    partial void OnidGlobalPrikazChanged();
    partial void OnidPKCategoryChanging(int value);
    partial void OnidPKCategoryChanged();
    partial void OnidCategoryChanging(System.Nullable<int> value);
    partial void OnidCategoryChanged();
    #endregion
		
		public Post()
		{
			this._PlanStaffs = new EntitySet<PlanStaff>(new Action<PlanStaff>(this.attach_PlanStaffs), new Action<PlanStaff>(this.detach_PlanStaffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostName", DbType="VarChar(150)")]
		public string PostName
		{
			get
			{
				return this._PostName;
			}
			set
			{
				if ((this._PostName != value))
				{
					this.OnPostNameChanging(value);
					this.SendPropertyChanging();
					this._PostName = value;
					this.SendPropertyChanged("PostName");
					this.OnPostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostShortName", DbType="VarChar(50)")]
		public string PostShortName
		{
			get
			{
				return this._PostShortName;
			}
			set
			{
				if ((this._PostShortName != value))
				{
					this.OnPostShortNameChanging(value);
					this.SendPropertyChanging();
					this._PostShortName = value;
					this.SendPropertyChanged("PostShortName");
					this.OnPostShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerBit", DbType="Bit NOT NULL")]
		public bool ManagerBit
		{
			get
			{
				return this._ManagerBit;
			}
			set
			{
				if ((this._ManagerBit != value))
				{
					this.OnManagerBitChanging(value);
					this.SendPropertyChanging();
					this._ManagerBit = value;
					this.SendPropertyChanged("ManagerBit");
					this.OnManagerBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGlobalPrikaz", DbType="Int NOT NULL")]
		public int idGlobalPrikaz
		{
			get
			{
				return this._idGlobalPrikaz;
			}
			set
			{
				if ((this._idGlobalPrikaz != value))
				{
					this.OnidGlobalPrikazChanging(value);
					this.SendPropertyChanging();
					this._idGlobalPrikaz = value;
					this.SendPropertyChanged("idGlobalPrikaz");
					this.OnidGlobalPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPKCategory", DbType="Int NOT NULL")]
		public int idPKCategory
		{
			get
			{
				return this._idPKCategory;
			}
			set
			{
				if ((this._idPKCategory != value))
				{
					this.OnidPKCategoryChanging(value);
					this.SendPropertyChanging();
					this._idPKCategory = value;
					this.SendPropertyChanged("idPKCategory");
					this.OnidPKCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategory", DbType="Int")]
		public System.Nullable<int> idCategory
		{
			get
			{
				return this._idCategory;
			}
			set
			{
				if ((this._idCategory != value))
				{
					this.OnidCategoryChanging(value);
					this.SendPropertyChanging();
					this._idCategory = value;
					this.SendPropertyChanged("idCategory");
					this.OnidCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PlanStaff", Storage="_PlanStaffs", ThisKey="id", OtherKey="idPost")]
		public EntitySet<PlanStaff> PlanStaffs
		{
			get
			{
				return this._PlanStaffs;
			}
			set
			{
				this._PlanStaffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaffReplacement")]
	public partial class FactStaffReplacement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFactStaff;
		
		private int _idReplacedFactStaff;
		
		private int _idReplacementReason;
		
		private EntityRef<FactStaff> _FactStaff;
		
		private EntityRef<FactStaff> _FactStaff1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    partial void OnidReplacedFactStaffChanging(int value);
    partial void OnidReplacedFactStaffChanged();
    partial void OnidReplacementReasonChanging(int value);
    partial void OnidReplacementReasonChanged();
    #endregion
		
		public FactStaffReplacement()
		{
			this._FactStaff = default(EntityRef<FactStaff>);
			this._FactStaff1 = default(EntityRef<FactStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (this._FactStaff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idReplacedFactStaff", DbType="Int NOT NULL")]
		public int idReplacedFactStaff
		{
			get
			{
				return this._idReplacedFactStaff;
			}
			set
			{
				if ((this._idReplacedFactStaff != value))
				{
					if (this._FactStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidReplacedFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idReplacedFactStaff = value;
					this.SendPropertyChanged("idReplacedFactStaff");
					this.OnidReplacedFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idReplacementReason", DbType="Int NOT NULL")]
		public int idReplacementReason
		{
			get
			{
				return this._idReplacementReason;
			}
			set
			{
				if ((this._idReplacementReason != value))
				{
					this.OnidReplacementReasonChanging(value);
					this.SendPropertyChanging();
					this._idReplacementReason = value;
					this.SendPropertyChanged("idReplacementReason");
					this.OnidReplacementReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffReplacement", Storage="_FactStaff", ThisKey="idReplacedFactStaff", OtherKey="id", IsForeignKey=true)]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.FactStaffReplacements.Remove(this);
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffReplacements.Add(this);
						this._idReplacedFactStaff = value.id;
					}
					else
					{
						this._idReplacedFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffReplacement1", Storage="_FactStaff1", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FactStaff FactStaff1
		{
			get
			{
				return this._FactStaff1.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff1.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff1.Entity = null;
						previousValue.FactStaffReplacement = null;
					}
					this._FactStaff1.Entity = value;
					if ((value != null))
					{
						value.FactStaffReplacement = this;
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _itab_n;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Otch;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _BirthPlace;
		
		private bool _SexBit;
		
		private System.Nullable<int> _idGrazd;
		
		private System.Nullable<int> _idSemPol;
		
		private int _SeverKoeff;
		
		private int _RayonKoeff;
		
		private System.Guid _GUID;
		
		private System.Data.Linq.Binary _EmployeeSid;
		
		private string _EmployeeLogin;
		
		private EntitySet<FactStaff> _FactStaffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onitab_nChanging(System.Nullable<int> value);
    partial void Onitab_nChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnOtchChanging(string value);
    partial void OnOtchChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnSexBitChanging(bool value);
    partial void OnSexBitChanged();
    partial void OnidGrazdChanging(System.Nullable<int> value);
    partial void OnidGrazdChanged();
    partial void OnidSemPolChanging(System.Nullable<int> value);
    partial void OnidSemPolChanged();
    partial void OnSeverKoeffChanging(int value);
    partial void OnSeverKoeffChanged();
    partial void OnRayonKoeffChanging(int value);
    partial void OnRayonKoeffChanged();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnEmployeeSidChanging(System.Data.Linq.Binary value);
    partial void OnEmployeeSidChanged();
    partial void OnEmployeeLoginChanging(string value);
    partial void OnEmployeeLoginChanged();
    #endregion
		
		public Employee()
		{
			this._FactStaffs = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaffs), new Action<FactStaff>(this.detach_FactStaffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itab_n", DbType="Int")]
		public System.Nullable<int> itab_n
		{
			get
			{
				return this._itab_n;
			}
			set
			{
				if ((this._itab_n != value))
				{
					this.Onitab_nChanging(value);
					this.SendPropertyChanging();
					this._itab_n = value;
					this.SendPropertyChanged("itab_n");
					this.Onitab_nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otch", DbType="VarChar(50)")]
		public string Otch
		{
			get
			{
				return this._Otch;
			}
			set
			{
				if ((this._Otch != value))
				{
					this.OnOtchChanging(value);
					this.SendPropertyChanging();
					this._Otch = value;
					this.SendPropertyChanged("Otch");
					this.OnOtchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="VarChar(200)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexBit", DbType="Bit NOT NULL")]
		public bool SexBit
		{
			get
			{
				return this._SexBit;
			}
			set
			{
				if ((this._SexBit != value))
				{
					this.OnSexBitChanging(value);
					this.SendPropertyChanging();
					this._SexBit = value;
					this.SendPropertyChanged("SexBit");
					this.OnSexBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGrazd", DbType="Int")]
		public System.Nullable<int> idGrazd
		{
			get
			{
				return this._idGrazd;
			}
			set
			{
				if ((this._idGrazd != value))
				{
					this.OnidGrazdChanging(value);
					this.SendPropertyChanging();
					this._idGrazd = value;
					this.SendPropertyChanged("idGrazd");
					this.OnidGrazdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSemPol", DbType="Int")]
		public System.Nullable<int> idSemPol
		{
			get
			{
				return this._idSemPol;
			}
			set
			{
				if ((this._idSemPol != value))
				{
					this.OnidSemPolChanging(value);
					this.SendPropertyChanging();
					this._idSemPol = value;
					this.SendPropertyChanged("idSemPol");
					this.OnidSemPolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverKoeff", DbType="Int NOT NULL")]
		public int SeverKoeff
		{
			get
			{
				return this._SeverKoeff;
			}
			set
			{
				if ((this._SeverKoeff != value))
				{
					this.OnSeverKoeffChanging(value);
					this.SendPropertyChanging();
					this._SeverKoeff = value;
					this.SendPropertyChanged("SeverKoeff");
					this.OnSeverKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RayonKoeff", DbType="Int NOT NULL")]
		public int RayonKoeff
		{
			get
			{
				return this._RayonKoeff;
			}
			set
			{
				if ((this._RayonKoeff != value))
				{
					this.OnRayonKoeffChanging(value);
					this.SendPropertyChanging();
					this._RayonKoeff = value;
					this.SendPropertyChanged("RayonKoeff");
					this.OnRayonKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeSid", DbType="VarBinary(85)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary EmployeeSid
		{
			get
			{
				return this._EmployeeSid;
			}
			set
			{
				if ((this._EmployeeSid != value))
				{
					this.OnEmployeeSidChanging(value);
					this.SendPropertyChanging();
					this._EmployeeSid = value;
					this.SendPropertyChanged("EmployeeSid");
					this.OnEmployeeSidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeLogin", DbType="NVarChar(128)")]
		public string EmployeeLogin
		{
			get
			{
				return this._EmployeeLogin;
			}
			set
			{
				if ((this._EmployeeLogin != value))
				{
					this.OnEmployeeLoginChanging(value);
					this.SendPropertyChanging();
					this._EmployeeLogin = value;
					this.SendPropertyChanged("EmployeeLogin");
					this.OnEmployeeLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_FactStaff", Storage="_FactStaffs", ThisKey="id", OtherKey="idEmployee")]
		public EntitySet<FactStaff> FactStaffs
		{
			get
			{
				return this._FactStaffs;
			}
			set
			{
				this._FactStaffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanStaff")]
	public partial class PlanStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idDepartment;
		
		private int _idPost;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<FactStaff> _FactStaffs;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidDepartmentChanging(int value);
    partial void OnidDepartmentChanged();
    partial void OnidPostChanging(int value);
    partial void OnidPostChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    #endregion
		
		public PlanStaff()
		{
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._FactStaffs = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaffs), new Action<FactStaff>(this.detach_FactStaffs));
			this._Department = default(EntityRef<Department>);
			this._Post = default(EntityRef<Post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int NOT NULL")]
		public int idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idDepartment = value;
					this.SendPropertyChanged("idDepartment");
					this.OnidDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", DbType="Int NOT NULL")]
		public int idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPostChanging(value);
					this.SendPropertyChanging();
					this._idPost = value;
					this.SendPropertyChanged("idPost");
					this.OnidPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_Department", Storage="_Departments", ThisKey="id", OtherKey="idManagerPlanStaff")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_FactStaff", Storage="_FactStaffs", ThisKey="id", OtherKey="idPlanStaff")]
		public EntitySet<FactStaff> FactStaffs
		{
			get
			{
				return this._FactStaffs;
			}
			set
			{
				this._FactStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PlanStaff", Storage="_Department", ThisKey="idDepartment", OtherKey="id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PlanStaffs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PlanStaffs.Add(this);
						this._idDepartment = value.id;
					}
					else
					{
						this._idDepartment = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PlanStaff", Storage="_Post", ThisKey="idPost", OtherKey="id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.PlanStaffs.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.PlanStaffs.Add(this);
						this._idPost = value.id;
					}
					else
					{
						this._idPost = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = null;
		}
		
		private void attach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = this;
		}
		
		private void detach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaff")]
	public partial class FactStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idPlanStaff;
		
		private int _idEmployee;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private bool _IsReplacement;
		
		private System.Nullable<int> _idTimeSheetSheduleType;
		
		private EntitySet<FactStaffReplacement> _FactStaffReplacements;
		
		private EntityRef<FactStaffReplacement> _FactStaffReplacement;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidPlanStaffChanging(int value);
    partial void OnidPlanStaffChanged();
    partial void OnidEmployeeChanging(int value);
    partial void OnidEmployeeChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnIsReplacementChanging(bool value);
    partial void OnIsReplacementChanged();
    partial void OnidTimeSheetSheduleTypeChanging(System.Nullable<int> value);
    partial void OnidTimeSheetSheduleTypeChanged();
    #endregion
		
		public FactStaff()
		{
			this._FactStaffReplacements = new EntitySet<FactStaffReplacement>(new Action<FactStaffReplacement>(this.attach_FactStaffReplacements), new Action<FactStaffReplacement>(this.detach_FactStaffReplacements));
			this._FactStaffReplacement = default(EntityRef<FactStaffReplacement>);
			this._Employee = default(EntityRef<Employee>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int NOT NULL")]
		public int idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					if (this._PlanStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idPlanStaff = value;
					this.SendPropertyChanged("idPlanStaff");
					this.OnidPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int NOT NULL")]
		public int idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmployeeChanging(value);
					this.SendPropertyChanging();
					this._idEmployee = value;
					this.SendPropertyChanged("idEmployee");
					this.OnidEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplacement", DbType="Bit NOT NULL")]
		public bool IsReplacement
		{
			get
			{
				return this._IsReplacement;
			}
			set
			{
				if ((this._IsReplacement != value))
				{
					this.OnIsReplacementChanging(value);
					this.SendPropertyChanging();
					this._IsReplacement = value;
					this.SendPropertyChanged("IsReplacement");
					this.OnIsReplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTimeSheetSheduleType", DbType="Int")]
		public System.Nullable<int> idTimeSheetSheduleType
		{
			get
			{
				return this._idTimeSheetSheduleType;
			}
			set
			{
				if ((this._idTimeSheetSheduleType != value))
				{
					this.OnidTimeSheetSheduleTypeChanging(value);
					this.SendPropertyChanging();
					this._idTimeSheetSheduleType = value;
					this.SendPropertyChanged("idTimeSheetSheduleType");
					this.OnidTimeSheetSheduleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffReplacement", Storage="_FactStaffReplacements", ThisKey="id", OtherKey="idReplacedFactStaff")]
		public EntitySet<FactStaffReplacement> FactStaffReplacements
		{
			get
			{
				return this._FactStaffReplacements;
			}
			set
			{
				this._FactStaffReplacements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffReplacement1", Storage="_FactStaffReplacement", ThisKey="id", OtherKey="idFactStaff", IsUnique=true, IsForeignKey=false)]
		public FactStaffReplacement FactStaffReplacement
		{
			get
			{
				return this._FactStaffReplacement.Entity;
			}
			set
			{
				FactStaffReplacement previousValue = this._FactStaffReplacement.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffReplacement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffReplacement.Entity = null;
						previousValue.FactStaff1 = null;
					}
					this._FactStaffReplacement.Entity = value;
					if ((value != null))
					{
						value.FactStaff1 = this;
					}
					this.SendPropertyChanged("FactStaffReplacement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_FactStaff", Storage="_Employee", ThisKey="idEmployee", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.FactStaffs.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.FactStaffs.Add(this);
						this._idEmployee = value.id;
					}
					else
					{
						this._idEmployee = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_FactStaff", Storage="_PlanStaff", ThisKey="idPlanStaff", OtherKey="id", IsForeignKey=true)]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.FactStaffs.Remove(this);
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffs.Add(this);
						this._idPlanStaff = value.id;
					}
					else
					{
						this._idPlanStaff = default(int);
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactStaffReplacements(FactStaffReplacement entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = this;
		}
		
		private void detach_FactStaffReplacements(FactStaffReplacement entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = null;
		}
	}
	
	public partial class GetPlanStaffByPeriodResult
	{
		
		private System.Nullable<int> _idPlanStaff;
		
		private System.Nullable<decimal> _StaffCount;
		
		private System.Nullable<int> _idCategory;
		
		private System.Nullable<int> _idDepartment;
		
		private System.Nullable<int> _idPost;
		
		private System.Nullable<int> _idFinancingSource;
		
		private System.Nullable<int> _SeverKoeff;
		
		private System.Nullable<int> _RayonKoeff;
		
		public GetPlanStaffByPeriodResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int")]
		public System.Nullable<int> idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					this._idPlanStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this._StaffCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategory", DbType="Int")]
		public System.Nullable<int> idCategory
		{
			get
			{
				return this._idCategory;
			}
			set
			{
				if ((this._idCategory != value))
				{
					this._idCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int")]
		public System.Nullable<int> idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					this._idDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", DbType="Int")]
		public System.Nullable<int> idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					this._idPost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFinancingSource", DbType="Int")]
		public System.Nullable<int> idFinancingSource
		{
			get
			{
				return this._idFinancingSource;
			}
			set
			{
				if ((this._idFinancingSource != value))
				{
					this._idFinancingSource = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverKoeff", DbType="Int")]
		public System.Nullable<int> SeverKoeff
		{
			get
			{
				return this._SeverKoeff;
			}
			set
			{
				if ((this._SeverKoeff != value))
				{
					this._SeverKoeff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RayonKoeff", DbType="Int")]
		public System.Nullable<int> RayonKoeff
		{
			get
			{
				return this._RayonKoeff;
			}
			set
			{
				if ((this._RayonKoeff != value))
				{
					this._RayonKoeff = value;
				}
			}
		}
	}
	
	public partial class GetSubDepartmentsResult
	{
		
		private System.Nullable<int> _idDepartment;
		
		private System.Nullable<int> _idManagerDepartment;
		
		private System.Nullable<bool> _IsMain;
		
		public GetSubDepartmentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int")]
		public System.Nullable<int> idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					this._idDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerDepartment", DbType="Int")]
		public System.Nullable<int> idManagerDepartment
		{
			get
			{
				return this._idManagerDepartment;
			}
			set
			{
				if ((this._idManagerDepartment != value))
				{
					this._idManagerDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit")]
		public System.Nullable<bool> IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this._IsMain = value;
				}
			}
		}
	}
	
	public partial class GetFactStaffByPeriodResult
	{
		
		private System.Nullable<int> _idFactStaff;
		
		private System.Nullable<int> _idPlanStaff;
		
		private System.Nullable<int> _idEmployee;
		
		private System.Nullable<int> _idTypeWork;
		
		private System.Nullable<decimal> _StaffCount;
		
		private System.Nullable<bool> _IsReplacement;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		public GetFactStaffByPeriodResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int")]
		public System.Nullable<int> idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					this._idFactStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int")]
		public System.Nullable<int> idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					this._idPlanStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int")]
		public System.Nullable<int> idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					this._idEmployee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeWork", DbType="Int")]
		public System.Nullable<int> idTypeWork
		{
			get
			{
				return this._idTypeWork;
			}
			set
			{
				if ((this._idTypeWork != value))
				{
					this._idTypeWork = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this._StaffCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplacement", DbType="Bit")]
		public System.Nullable<bool> IsReplacement
		{
			get
			{
				return this._IsReplacement;
			}
			set
			{
				if ((this._IsReplacement != value))
				{
					this._IsReplacement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this._DateBegin = value;
				}
			}
		}
	}
	
	public partial class GetDepartmentStaffResult
	{
		
		private string _PostName;
		
		private string _PKCategoryName;
		
		private string _CategoryName;
		
		private string _FinancingSourceName;
		
		private System.Nullable<decimal> _factStaffCount;
		
		private string _EmplName;
		
		private string _TypeWorkName;
		
		private string _DepartmentName;
		
		private System.Nullable<System.DateTime> _PeriodBegin;
		
		private System.Nullable<System.DateTime> _PeriodEnd;
		
		private System.Nullable<decimal> _StaffCountWithoutReplacement;
		
		private System.Nullable<int> _idPlanStaff;
		
		private string _EmplFullName;
		
		private System.Data.Linq.Binary _EmplSid;
		
		private System.Nullable<int> _idEmployee;
		
		private System.Nullable<int> _idPost;
		
		private System.Nullable<bool> _ManagerBit;
		
		private System.Nullable<int> _idFactStaff;
		
		private string _EmployeeLogin;
		
		public GetDepartmentStaffResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostName", DbType="VarChar(150)")]
		public string PostName
		{
			get
			{
				return this._PostName;
			}
			set
			{
				if ((this._PostName != value))
				{
					this._PostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCategoryName", DbType="VarChar(150)")]
		public string PKCategoryName
		{
			get
			{
				return this._PKCategoryName;
			}
			set
			{
				if ((this._PKCategoryName != value))
				{
					this._PKCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(50)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingSourceName", DbType="VarChar(50)")]
		public string FinancingSourceName
		{
			get
			{
				return this._FinancingSourceName;
			}
			set
			{
				if ((this._FinancingSourceName != value))
				{
					this._FinancingSourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factStaffCount", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> factStaffCount
		{
			get
			{
				return this._factStaffCount;
			}
			set
			{
				if ((this._factStaffCount != value))
				{
					this._factStaffCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplName", DbType="VarChar(150)")]
		public string EmplName
		{
			get
			{
				return this._EmplName;
			}
			set
			{
				if ((this._EmplName != value))
				{
					this._EmplName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeWorkName", DbType="VarChar(150)")]
		public string TypeWorkName
		{
			get
			{
				return this._TypeWorkName;
			}
			set
			{
				if ((this._TypeWorkName != value))
				{
					this._TypeWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(200)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> PeriodBegin
		{
			get
			{
				return this._PeriodBegin;
			}
			set
			{
				if ((this._PeriodBegin != value))
				{
					this._PeriodBegin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> PeriodEnd
		{
			get
			{
				return this._PeriodEnd;
			}
			set
			{
				if ((this._PeriodEnd != value))
				{
					this._PeriodEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCountWithoutReplacement", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> StaffCountWithoutReplacement
		{
			get
			{
				return this._StaffCountWithoutReplacement;
			}
			set
			{
				if ((this._StaffCountWithoutReplacement != value))
				{
					this._StaffCountWithoutReplacement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int")]
		public System.Nullable<int> idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					this._idPlanStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplFullName", DbType="VarChar(250)")]
		public string EmplFullName
		{
			get
			{
				return this._EmplFullName;
			}
			set
			{
				if ((this._EmplFullName != value))
				{
					this._EmplFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplSid", DbType="VarBinary(85)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary EmplSid
		{
			get
			{
				return this._EmplSid;
			}
			set
			{
				if ((this._EmplSid != value))
				{
					this._EmplSid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int")]
		public System.Nullable<int> idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					this._idEmployee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", DbType="Int")]
		public System.Nullable<int> idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					this._idPost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerBit", DbType="Bit")]
		public System.Nullable<bool> ManagerBit
		{
			get
			{
				return this._ManagerBit;
			}
			set
			{
				if ((this._ManagerBit != value))
				{
					this._ManagerBit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int")]
		public System.Nullable<int> idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					this._idFactStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeLogin", DbType="NVarChar(128)")]
		public string EmployeeLogin
		{
			get
			{
				return this._EmployeeLogin;
			}
			set
			{
				if ((this._EmployeeLogin != value))
				{
					this._EmployeeLogin = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
